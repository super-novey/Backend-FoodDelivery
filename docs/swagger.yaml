openapi: 3.0.0
info:
  title: H2D Food Delivery API Documentation
  version: 1.0.0
  description: This is the API documentation for our food delivery application.

servers:
  - url: http://localhost:8081/api/v1

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: The user ID
        email:
          type: string
          description: User's email
        name:
          type: string
          description: User's name
        role:
          type: string
          description: User's role
        status:
          type: string
          description: Account status
        phone:
          type: string
          description: User's phone number
        otp:
          type: string
          description: OTP code for verification
        otpExpires:
          type: string
          format: date-time
          description: OTP expiration time

paths:
  /auth/login:
    post:
      summary: Authenticate user (login)
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - role
              properties:
                email:
                  type: string
                  description: User's email
                password:
                  type: string
                  description: User's password
                role:
                  type: string
                  description: User's role
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Đăng nhập thành công!
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      token:
                        type: string
                        description: JWT token
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tài khoản không tồn tại!
                  error:
                    type: boolean
                    example: true
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
                - role
                - phone
              properties:
                name:
                  type: string
                  description: User's full name
                  example: Nguyen Van A
                email:
                  type: string
                  description: User's email address
                  example: test@example.com
                password:
                  type: string
                  description: User's password
                  example: password123
                role:
                  type: string
                  description: User's role (e.g., customer, admin)
                  example: customer
                phone:
                  type: string
                  description: User's phone number
                  example: "0123456789"
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Đăng ký thành công
                  data:
                    $ref: '#/components/schemas/User'
                  statusCode:
                    type: integer
                    example: 201
                  hasError:
                    type: boolean
                    example: false
        '409':
          description: Conflict - Email already registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Địa chỉ email đã được đăng ký
                  data:
                    type: string
                    example: null
                  statusCode:
                    type: integer
                    example: 409
                  hasError:
                    type: boolean
                    example: true
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to create user
                  data:
                    type: string
                    example: 'null'
                  statusCode:
                    type: integer
                    example: 500
                  hasError:
                    type: boolean
                    example: true
                    